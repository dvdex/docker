#
# Ansible managed
#

# Labels for Traefik, Watchtower, and Autoheal
#   (docker compose ignores fields that start with `x-`. So we can use them to
#    define reusable fragments with `&anchors`. See:
#    https://docs.docker.com/compose/compose-file/11-extension/ )
x-labels: &base_labels
      traefik.enable: "true"
      traefik.docker.network: "traefik_network"
      traefik.http.services.sftpgo.loadbalancer.server.port: "8080"
      traefik.http.routers.sftpgo_web.EntryPoints: "web-secure"
      traefik.http.routers.sftpgo_web.rule: "Host(`sftpgo.kite-gila.work`)"
      traefik.http.routers.sftpgo_web.service: "sftpgo"
      traefik.http.routers.sftpgo_web.tls: true
      traefik.http.routers.sftpgo_web.tls.certresolver: "default"
      com.centurylinklabs.watchtower.enable: "true"
      autoheal: "true"

# Reusable default networks configuration to ensure container is part of both
# the traefik network and the default network of this compose file
x-networks: &base_networks
  default:
  
  traefik_net:
    aliases:
      - sftpgo
      
  db_net:
    aliases:
      - sftpgo

# The main Docker Compose file
services:
  sftpgo:
    image: drakkan/sftpgo:v2.6.4
    user: "1000:1002"
    container_name: "sftpgo"
    healthcheck:
      test: [ "CMD-SHELL", "echo `date` >> /tmp/health.txt" ]
      interval: 300s
      timeout: 5s
      retries: 1
      start_period: 10s      
    restart: on-failure:5
    ports:
      - 22022:2022 # SFTP
    environment:
      SFTPGO_CONFIG_DIR: "/etc/sftpgo/"
      SFTPGO_DATA_PROVIDER__BACKUPS_PATH: "/srv/sftpgo/backup/sftpgo/"
      SFTPGO_WEBDAVD__BINDINGS__0__PORT: 5007
      SFTPGO_DATA_PROVIDER__DRIVER: postgresql
      SFTPGO_DATA_PROVIDER__NAME: sftpgo
      SFTPGO_DATA_PROVIDER__HOST: postgres16
      SFTPGO_DATA_PROVIDER__PORT: 5432
      SFTPGO_DATA_PROVIDER__CREATE_DEFAULT_ADMIN: "true"
      SFTPGO_DEFAULT_ADMIN_USERNAME: ${SFTPGO_DEFAULT_ADMIN_USERNAME_ENV}
      SFTPGO_DEFAULT_ADMIN_PASSWORD: ${SFTPGO_DEFAULT_ADMIN_PASSWORD_ENV}
      SFTPGO_DATA_PROVIDER__USERNAME: ${SFTPGO_DATA_PROVIDER__USERNAME_ENV}
      SFTPGO_DATA_PROVIDER__PASSWORD: ${SFTPGO_DATA_PROVIDER__PASSWORD_ENV}
      SFTPGO_COMMON__UPLOAD_MODE: 2      
      SFTPGO_COMMON__DEFENDER__ENABLED: "true"
      SFTPGO_COMMON__DEFENDER__BAN_TIME: 15
      SFTPGO_COMMON__DEFENDER__BAN_TIME_INCREMENT: 100
      SFTPGO_COMMON__DEFENDER__THRESHOLD: 5
      SFTPGO_COMMON__DEFENDER__OBSERVATION_TIME: 15      
      SFTPGO_SMTP__HOST: "inbucket"
      SFTPGO_SMTP__FROM: "sftpgo@sftpgo.kite-gila.work"
      SFTPGO_SMTP__ENCRYPTION: 0
      SFTPGO_SMTP__PORT: 2500
      SFTPGO_SMTP__AUTH_TYPE: 0
      SFTPGO_SFTPD__ENABLED_SSH_COMMANDS: '*'
      SFTPGO_LOG_LEVEL: "info"

    volumes:
      - "/volume1/docker/sftpgo/data:/srv/sftpgo:rw"
      - "/volume1/docker/sftpgo/config:/etc/sftpgo:rw"
      - "/volume1/docker/backup:/srv/sftpgo/backup:rw"
      - "/volume1/docker/syncthing/data/transfer:/srv/sftpgo/transfer:rw"
#      - "/volume1/docker/gitea/data/git/repositories:/srv/sftpgo/git:rw"

    labels:
      << : *base_labels
      traefik.http.services.sftpgowebdav.loadbalancer.server.port: 5007
      traefik.http.routers.sftpgo_webdav.entrypoints: "web-secure"
      traefik.http.routers.sftpgo_webdav.rule: "Host(`webdav.kite-gila.work`)"
      traefik.http.routers.sftpgo_webdav.service: "sftpgowebdav"
      traefik.http.routers.sftpgo_webdav.tls: true
      traefik.http.routers.sftpgo_webdav.tls.certresolver: "default"
    networks: *base_networks          

networks:
  # Access the traefik-network
  traefik_net:
    name: traefik_network
    external: true
# Access the db-network
  db_net:
    name: db_network
    external: true
